name: Publish xrange

on:
  push:
    branches:
      - master
      - develop

env:
  DIST_TAG_MASTER: latest
  DIST_TAG_DEVELOP: next

jobs:
  test:
    name: Test changes on ${{ matrix.os }}, and collect coverage
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: true
      matrix:
        os:
          - ubuntu-latest
          - windows-latest

    steps:
      - uses: actions/checkout@v2

      - run: npm ci
      - run: npm run build
      - run: npm run test:ci -- --coverage

      - name: Save coverage report (only for Ubuntu)
        if: matrix.os == 'ubuntu-latest'
        uses: actions/upload-artifact@v1
        with:
          name: xrange-coverage-at-${{ github.sha }}
          path: coverage

  publish:
    name: Publish xrange
    runs-on: ubuntu-latest
    needs: test
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-node@v1
        with:
          node-version: '12.x'

      - name: Publish dist-tag by branch name
        run: |2
          set -ex

          incoming_version=$(node -pe "require('./package.json').version;")

          if [ ! -z "$(npm view xrange@incoming_version version)" ]; then
            echo "Cannot publish ($incoming_version) again; please, update version by running 'npm version <version>'"
            exit 1
          fi

          if [ "$GITHUB_REF" = "refs/heads/master" ]; then
            dist_tag=$DIST_TAG_MASTER
          elif [ "$GITHUB_REF" = "refs/heads/develop" ]; then
            dist_tag=$DIST_TAG_DEVELOP
          else
            echo "Unknown release branch ('$GITHUB_REF'), expected 'refs/heads/master' or 'refs/heads/develop'"
            exit 1
          fi

          echo "//registry.npmjs.org/:_authToken=${{ secrets.NPM_AUTH_TOKEN }}" > .npmrc

          npm publish --tag $dist_tag
